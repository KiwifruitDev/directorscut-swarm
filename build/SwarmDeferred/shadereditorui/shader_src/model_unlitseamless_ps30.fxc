// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_SWARM_COMPILE


// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );

// Constants
const float g_cData_seamless_scale		: register( c16 ); 		// Static

// Semantic structures
struct PS_INPUT
{
	float4 vTexCoord_0			:	TEXCOORD0;
	float4 vColor_0				:	COLOR0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float2 _var0 = In.vTexCoord_0.zw;
	float _var1 = In.vColor_0.w;
	float _var2 = In.vColor_0.x;
	float _var3 = In.vColor_0.y;
	float _var4 = In.vColor_0.z;
	float3 _var5 = float3( _var0, _var1 );
	_var5 = _var5 * g_cData_seamless_scale;
	float2 _var6 = _var5.zy;
	float2 _var7 = _var5.xz;
	float2 _var8 = _var5.xy;
	float4 _var9 = tex2D( _Sampler_00, _var6 ).rgba;
	float4 _var10 = tex2D( _Sampler_00, _var7 ).rgba;
	float4 _var11 = tex2D( _Sampler_00, _var8 ).rgba;
	_var9 = _var9 * _var2;
	_var10 = _var10 * _var3;
	_var11 = _var11 * _var4;
	_var9 = _var9 + _var10;
	_var9 = _var9 + _var11;
	Out.vColor_0 = _var9;
	return Out;
}